// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.3
// source: shared/dynamic_setting.proto

package dynamic_setting

import (
	platform "github.com/featureguards/featureguards-go/v2/proto/platform"
	user "github.com/featureguards/featureguards-go/v2/proto/user"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrimitiveType int32

const (
	PrimitiveType_BOOL    PrimitiveType = 0
	PrimitiveType_STRING  PrimitiveType = 1
	PrimitiveType_INTEGER PrimitiveType = 2
	PrimitiveType_FLOAT   PrimitiveType = 3
)

// Enum value maps for PrimitiveType.
var (
	PrimitiveType_name = map[int32]string{
		0: "BOOL",
		1: "STRING",
		2: "INTEGER",
		3: "FLOAT",
	}
	PrimitiveType_value = map[string]int32{
		"BOOL":    0,
		"STRING":  1,
		"INTEGER": 2,
		"FLOAT":   3,
	}
)

func (x PrimitiveType) Enum() *PrimitiveType {
	p := new(PrimitiveType)
	*p = x
	return p
}

func (x PrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_dynamic_setting_proto_enumTypes[0].Descriptor()
}

func (PrimitiveType) Type() protoreflect.EnumType {
	return &file_shared_dynamic_setting_proto_enumTypes[0]
}

func (x PrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveType.Descriptor instead.
func (PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{0}
}

type DynamicSetting_Type int32

const (
	DynamicSetting_BOOL    DynamicSetting_Type = 0
	DynamicSetting_STRING  DynamicSetting_Type = 1
	DynamicSetting_INTEGER DynamicSetting_Type = 2
	DynamicSetting_FLOAT   DynamicSetting_Type = 3
	DynamicSetting_SET     DynamicSetting_Type = 4
	DynamicSetting_MAP     DynamicSetting_Type = 5
	DynamicSetting_LIST    DynamicSetting_Type = 6
	DynamicSetting_JSON    DynamicSetting_Type = 7
)

// Enum value maps for DynamicSetting_Type.
var (
	DynamicSetting_Type_name = map[int32]string{
		0: "BOOL",
		1: "STRING",
		2: "INTEGER",
		3: "FLOAT",
		4: "SET",
		5: "MAP",
		6: "LIST",
		7: "JSON",
	}
	DynamicSetting_Type_value = map[string]int32{
		"BOOL":    0,
		"STRING":  1,
		"INTEGER": 2,
		"FLOAT":   3,
		"SET":     4,
		"MAP":     5,
		"LIST":    6,
		"JSON":    7,
	}
)

func (x DynamicSetting_Type) Enum() *DynamicSetting_Type {
	p := new(DynamicSetting_Type)
	*p = x
	return p
}

func (x DynamicSetting_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynamicSetting_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_dynamic_setting_proto_enumTypes[1].Descriptor()
}

func (DynamicSetting_Type) Type() protoreflect.EnumType {
	return &file_shared_dynamic_setting_proto_enumTypes[1]
}

func (x DynamicSetting_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynamicSetting_Type.Descriptor instead.
func (DynamicSetting_Type) EnumDescriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{1, 0}
}

type DynamicSettingHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*DynamicSetting `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *DynamicSettingHistory) Reset() {
	*x = DynamicSettingHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSettingHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSettingHistory) ProtoMessage() {}

func (x *DynamicSettingHistory) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSettingHistory.ProtoReflect.Descriptor instead.
func (*DynamicSettingHistory) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{0}
}

func (x *DynamicSettingHistory) GetHistory() []*DynamicSetting {
	if x != nil {
		return x.History
	}
	return nil
}

type DynamicSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Read-only
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SettingType DynamicSetting_Type  `protobuf:"varint,3,opt,name=setting_type,json=settingType,proto3,enum=dynamic_setting.DynamicSetting_Type" json:"setting_type,omitempty"` // Set once.
	Version     int64                `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`                                                                     // Read-only.
	Description string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Platforms   []platform.Type      `protobuf:"varint,7,rep,packed,name=platforms,proto3,enum=platform.Type" json:"platforms,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	ProjectId   string               `protobuf:"bytes,11,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CreatedBy   *user.User           `protobuf:"bytes,12,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy   *user.User           `protobuf:"bytes,13,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Types that are assignable to SettingDefinition:
	//	*DynamicSetting_BoolValue
	//	*DynamicSetting_StringValue
	//	*DynamicSetting_IntegerValue
	//	*DynamicSetting_FloatValue
	//	*DynamicSetting_SetValues
	//	*DynamicSetting_MapValues
	//	*DynamicSetting_ListValues
	//	*DynamicSetting_JsonValue
	SettingDefinition isDynamicSetting_SettingDefinition `protobuf_oneof:"SettingDefinition"`
}

func (x *DynamicSetting) Reset() {
	*x = DynamicSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSetting) ProtoMessage() {}

func (x *DynamicSetting) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSetting.ProtoReflect.Descriptor instead.
func (*DynamicSetting) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{1}
}

func (x *DynamicSetting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DynamicSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicSetting) GetSettingType() DynamicSetting_Type {
	if x != nil {
		return x.SettingType
	}
	return DynamicSetting_BOOL
}

func (x *DynamicSetting) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DynamicSetting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DynamicSetting) GetPlatforms() []platform.Type {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *DynamicSetting) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DynamicSetting) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DynamicSetting) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DynamicSetting) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DynamicSetting) GetCreatedBy() *user.User {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *DynamicSetting) GetUpdatedBy() *user.User {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (m *DynamicSetting) GetSettingDefinition() isDynamicSetting_SettingDefinition {
	if m != nil {
		return m.SettingDefinition
	}
	return nil
}

func (x *DynamicSetting) GetBoolValue() *BoolValue {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_BoolValue); ok {
		return x.BoolValue
	}
	return nil
}

func (x *DynamicSetting) GetStringValue() *StringValue {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *DynamicSetting) GetIntegerValue() *IntegerValue {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_IntegerValue); ok {
		return x.IntegerValue
	}
	return nil
}

func (x *DynamicSetting) GetFloatValue() *FloatValue {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_FloatValue); ok {
		return x.FloatValue
	}
	return nil
}

func (x *DynamicSetting) GetSetValues() *SetValues {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_SetValues); ok {
		return x.SetValues
	}
	return nil
}

func (x *DynamicSetting) GetMapValues() *MapValues {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_MapValues); ok {
		return x.MapValues
	}
	return nil
}

func (x *DynamicSetting) GetListValues() *ListValues {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_ListValues); ok {
		return x.ListValues
	}
	return nil
}

func (x *DynamicSetting) GetJsonValue() *JsonValue {
	if x, ok := x.GetSettingDefinition().(*DynamicSetting_JsonValue); ok {
		return x.JsonValue
	}
	return nil
}

type isDynamicSetting_SettingDefinition interface {
	isDynamicSetting_SettingDefinition()
}

type DynamicSetting_BoolValue struct {
	BoolValue *BoolValue `protobuf:"bytes,20,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type DynamicSetting_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,21,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type DynamicSetting_IntegerValue struct {
	IntegerValue *IntegerValue `protobuf:"bytes,22,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type DynamicSetting_FloatValue struct {
	FloatValue *FloatValue `protobuf:"bytes,23,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type DynamicSetting_SetValues struct {
	SetValues *SetValues `protobuf:"bytes,24,opt,name=set_values,json=setValues,proto3,oneof"`
}

type DynamicSetting_MapValues struct {
	MapValues *MapValues `protobuf:"bytes,25,opt,name=map_values,json=mapValues,proto3,oneof"`
}

type DynamicSetting_ListValues struct {
	ListValues *ListValues `protobuf:"bytes,26,opt,name=list_values,json=listValues,proto3,oneof"`
}

type DynamicSetting_JsonValue struct {
	JsonValue *JsonValue `protobuf:"bytes,27,opt,name=json_value,json=jsonValue,proto3,oneof"`
}

func (*DynamicSetting_BoolValue) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_StringValue) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_IntegerValue) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_FloatValue) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_SetValues) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_MapValues) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_ListValues) isDynamicSetting_SettingDefinition() {}

func (*DynamicSetting_JsonValue) isDynamicSetting_SettingDefinition() {}

type BoolValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BoolValue) Reset() {
	*x = BoolValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolValue) ProtoMessage() {}

func (x *BoolValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolValue.ProtoReflect.Descriptor instead.
func (*BoolValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{2}
}

func (x *BoolValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type IntegerValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IntegerValue) Reset() {
	*x = IntegerValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegerValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerValue) ProtoMessage() {}

func (x *IntegerValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerValue.ProtoReflect.Descriptor instead.
func (*IntegerValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{3}
}

func (x *IntegerValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{4}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FloatValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FloatValue) Reset() {
	*x = FloatValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatValue) ProtoMessage() {}

func (x *FloatValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatValue.ProtoReflect.Descriptor instead.
func (*FloatValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{5}
}

func (x *FloatValue) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type JsonValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonValue []byte `protobuf:"bytes,1,opt,name=json_value,json=jsonValue,proto3" json:"json_value,omitempty"`
}

func (x *JsonValue) Reset() {
	*x = JsonValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonValue) ProtoMessage() {}

func (x *JsonValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonValue.ProtoReflect.Descriptor instead.
func (*JsonValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{6}
}

func (x *JsonValue) GetJsonValue() []byte {
	if x != nil {
		return x.JsonValue
	}
	return nil
}

type SetValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*SetValues_BoolValue
	//	*SetValues_StringValue
	//	*SetValues_IntegerValue
	//	*SetValues_FloatValue
	Value  isSetValues_Value `protobuf_oneof:"Value"`
	Type   PrimitiveType     `protobuf:"varint,1,opt,name=type,proto3,enum=dynamic_setting.PrimitiveType" json:"type,omitempty"`
	Values []*PrimitiveValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SetValues) Reset() {
	*x = SetValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetValues) ProtoMessage() {}

func (x *SetValues) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetValues.ProtoReflect.Descriptor instead.
func (*SetValues) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{7}
}

func (m *SetValues) GetValue() isSetValues_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SetValues) GetBoolValue() bool {
	if x, ok := x.GetValue().(*SetValues_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *SetValues) GetStringValue() string {
	if x, ok := x.GetValue().(*SetValues_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *SetValues) GetIntegerValue() int64 {
	if x, ok := x.GetValue().(*SetValues_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (x *SetValues) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*SetValues_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *SetValues) GetType() PrimitiveType {
	if x != nil {
		return x.Type
	}
	return PrimitiveType_BOOL
}

func (x *SetValues) GetValues() []*PrimitiveValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type isSetValues_Value interface {
	isSetValues_Value()
}

type SetValues_BoolValue struct {
	BoolValue bool `protobuf:"varint,20,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type SetValues_StringValue struct {
	StringValue string `protobuf:"bytes,21,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type SetValues_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,22,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type SetValues_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,23,opt,name=float_value,json=floatValue,proto3,oneof"`
}

func (*SetValues_BoolValue) isSetValues_Value() {}

func (*SetValues_StringValue) isSetValues_Value() {}

func (*SetValues_IntegerValue) isSetValues_Value() {}

func (*SetValues_FloatValue) isSetValues_Value() {}

type ListValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*ListValues_BoolValue
	//	*ListValues_StringValue
	//	*ListValues_IntegerValue
	//	*ListValues_FloatValue
	Value  isListValues_Value `protobuf_oneof:"Value"`
	Type   PrimitiveType      `protobuf:"varint,1,opt,name=type,proto3,enum=dynamic_setting.PrimitiveType" json:"type,omitempty"`
	Values []*PrimitiveValue  `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListValues) Reset() {
	*x = ListValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValues) ProtoMessage() {}

func (x *ListValues) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValues.ProtoReflect.Descriptor instead.
func (*ListValues) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{8}
}

func (m *ListValues) GetValue() isListValues_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ListValues) GetBoolValue() bool {
	if x, ok := x.GetValue().(*ListValues_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *ListValues) GetStringValue() string {
	if x, ok := x.GetValue().(*ListValues_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *ListValues) GetIntegerValue() int64 {
	if x, ok := x.GetValue().(*ListValues_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (x *ListValues) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*ListValues_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *ListValues) GetType() PrimitiveType {
	if x != nil {
		return x.Type
	}
	return PrimitiveType_BOOL
}

func (x *ListValues) GetValues() []*PrimitiveValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type isListValues_Value interface {
	isListValues_Value()
}

type ListValues_BoolValue struct {
	BoolValue bool `protobuf:"varint,20,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type ListValues_StringValue struct {
	StringValue string `protobuf:"bytes,21,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ListValues_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,22,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type ListValues_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,23,opt,name=float_value,json=floatValue,proto3,oneof"`
}

func (*ListValues_BoolValue) isListValues_Value() {}

func (*ListValues_StringValue) isListValues_Value() {}

func (*ListValues_IntegerValue) isListValues_Value() {}

func (*ListValues_FloatValue) isListValues_Value() {}

type PrimitiveValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*PrimitiveValue_BoolValue
	//	*PrimitiveValue_StringValue
	//	*PrimitiveValue_IntegerValue
	//	*PrimitiveValue_FloatValue
	Value isPrimitiveValue_Value `protobuf_oneof:"Value"`
}

func (x *PrimitiveValue) Reset() {
	*x = PrimitiveValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimitiveValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveValue) ProtoMessage() {}

func (x *PrimitiveValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveValue.ProtoReflect.Descriptor instead.
func (*PrimitiveValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{9}
}

func (m *PrimitiveValue) GetValue() isPrimitiveValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *PrimitiveValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*PrimitiveValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *PrimitiveValue) GetStringValue() string {
	if x, ok := x.GetValue().(*PrimitiveValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *PrimitiveValue) GetIntegerValue() int64 {
	if x, ok := x.GetValue().(*PrimitiveValue_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (x *PrimitiveValue) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*PrimitiveValue_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

type isPrimitiveValue_Value interface {
	isPrimitiveValue_Value()
}

type PrimitiveValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,20,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type PrimitiveValue_StringValue struct {
	StringValue string `protobuf:"bytes,21,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type PrimitiveValue_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,22,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type PrimitiveValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,23,opt,name=float_value,json=floatValue,proto3,oneof"`
}

func (*PrimitiveValue_BoolValue) isPrimitiveValue_Value() {}

func (*PrimitiveValue_StringValue) isPrimitiveValue_Value() {}

func (*PrimitiveValue_IntegerValue) isPrimitiveValue_Value() {}

func (*PrimitiveValue_FloatValue) isPrimitiveValue_Value() {}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *PrimitiveValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{10}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() *PrimitiveValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type MapValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      PrimitiveType `protobuf:"varint,1,opt,name=type,proto3,enum=dynamic_setting.PrimitiveType" json:"type,omitempty"`
	KeyValues []*KeyValue   `protobuf:"bytes,2,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
}

func (x *MapValues) Reset() {
	*x = MapValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_dynamic_setting_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapValues) ProtoMessage() {}

func (x *MapValues) ProtoReflect() protoreflect.Message {
	mi := &file_shared_dynamic_setting_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapValues.ProtoReflect.Descriptor instead.
func (*MapValues) Descriptor() ([]byte, []int) {
	return file_shared_dynamic_setting_proto_rawDescGZIP(), []int{11}
}

func (x *MapValues) GetType() PrimitiveType {
	if x != nil {
		return x.Type
	}
	return PrimitiveType_BOOL
}

func (x *MapValues) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

var File_shared_dynamic_setting_proto protoreflect.FileDescriptor

var file_shared_dynamic_setting_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x15, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xfb,
	0x08, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3b,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41,
	0x50, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x06, 0x12, 0x08, 0x0a,
	0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x07, 0x42, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x09,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x24, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a,
	0x0a, 0x09, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x09, 0x53,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09,
	0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92,
	0x02, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x53, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x79, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2a,
	0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x42, 0x44,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x73, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_dynamic_setting_proto_rawDescOnce sync.Once
	file_shared_dynamic_setting_proto_rawDescData = file_shared_dynamic_setting_proto_rawDesc
)

func file_shared_dynamic_setting_proto_rawDescGZIP() []byte {
	file_shared_dynamic_setting_proto_rawDescOnce.Do(func() {
		file_shared_dynamic_setting_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_dynamic_setting_proto_rawDescData)
	})
	return file_shared_dynamic_setting_proto_rawDescData
}

var file_shared_dynamic_setting_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shared_dynamic_setting_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shared_dynamic_setting_proto_goTypes = []interface{}{
	(PrimitiveType)(0),            // 0: dynamic_setting.PrimitiveType
	(DynamicSetting_Type)(0),      // 1: dynamic_setting.DynamicSetting.Type
	(*DynamicSettingHistory)(nil), // 2: dynamic_setting.DynamicSettingHistory
	(*DynamicSetting)(nil),        // 3: dynamic_setting.DynamicSetting
	(*BoolValue)(nil),             // 4: dynamic_setting.BoolValue
	(*IntegerValue)(nil),          // 5: dynamic_setting.IntegerValue
	(*StringValue)(nil),           // 6: dynamic_setting.StringValue
	(*FloatValue)(nil),            // 7: dynamic_setting.FloatValue
	(*JsonValue)(nil),             // 8: dynamic_setting.JsonValue
	(*SetValues)(nil),             // 9: dynamic_setting.SetValues
	(*ListValues)(nil),            // 10: dynamic_setting.ListValues
	(*PrimitiveValue)(nil),        // 11: dynamic_setting.PrimitiveValue
	(*KeyValue)(nil),              // 12: dynamic_setting.KeyValue
	(*MapValues)(nil),             // 13: dynamic_setting.MapValues
	(platform.Type)(0),            // 14: platform.Type
	(*timestamp.Timestamp)(nil),   // 15: google.protobuf.Timestamp
	(*user.User)(nil),             // 16: user.User
}
var file_shared_dynamic_setting_proto_depIdxs = []int32{
	3,  // 0: dynamic_setting.DynamicSettingHistory.history:type_name -> dynamic_setting.DynamicSetting
	1,  // 1: dynamic_setting.DynamicSetting.setting_type:type_name -> dynamic_setting.DynamicSetting.Type
	14, // 2: dynamic_setting.DynamicSetting.platforms:type_name -> platform.Type
	15, // 3: dynamic_setting.DynamicSetting.created_at:type_name -> google.protobuf.Timestamp
	15, // 4: dynamic_setting.DynamicSetting.updated_at:type_name -> google.protobuf.Timestamp
	15, // 5: dynamic_setting.DynamicSetting.deleted_at:type_name -> google.protobuf.Timestamp
	16, // 6: dynamic_setting.DynamicSetting.created_by:type_name -> user.User
	16, // 7: dynamic_setting.DynamicSetting.updated_by:type_name -> user.User
	4,  // 8: dynamic_setting.DynamicSetting.bool_value:type_name -> dynamic_setting.BoolValue
	6,  // 9: dynamic_setting.DynamicSetting.string_value:type_name -> dynamic_setting.StringValue
	5,  // 10: dynamic_setting.DynamicSetting.integer_value:type_name -> dynamic_setting.IntegerValue
	7,  // 11: dynamic_setting.DynamicSetting.float_value:type_name -> dynamic_setting.FloatValue
	9,  // 12: dynamic_setting.DynamicSetting.set_values:type_name -> dynamic_setting.SetValues
	13, // 13: dynamic_setting.DynamicSetting.map_values:type_name -> dynamic_setting.MapValues
	10, // 14: dynamic_setting.DynamicSetting.list_values:type_name -> dynamic_setting.ListValues
	8,  // 15: dynamic_setting.DynamicSetting.json_value:type_name -> dynamic_setting.JsonValue
	0,  // 16: dynamic_setting.SetValues.type:type_name -> dynamic_setting.PrimitiveType
	11, // 17: dynamic_setting.SetValues.values:type_name -> dynamic_setting.PrimitiveValue
	0,  // 18: dynamic_setting.ListValues.type:type_name -> dynamic_setting.PrimitiveType
	11, // 19: dynamic_setting.ListValues.values:type_name -> dynamic_setting.PrimitiveValue
	11, // 20: dynamic_setting.KeyValue.value:type_name -> dynamic_setting.PrimitiveValue
	0,  // 21: dynamic_setting.MapValues.type:type_name -> dynamic_setting.PrimitiveType
	12, // 22: dynamic_setting.MapValues.key_values:type_name -> dynamic_setting.KeyValue
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_shared_dynamic_setting_proto_init() }
func file_shared_dynamic_setting_proto_init() {
	if File_shared_dynamic_setting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_dynamic_setting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSettingHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegerValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimitiveValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_dynamic_setting_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shared_dynamic_setting_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DynamicSetting_BoolValue)(nil),
		(*DynamicSetting_StringValue)(nil),
		(*DynamicSetting_IntegerValue)(nil),
		(*DynamicSetting_FloatValue)(nil),
		(*DynamicSetting_SetValues)(nil),
		(*DynamicSetting_MapValues)(nil),
		(*DynamicSetting_ListValues)(nil),
		(*DynamicSetting_JsonValue)(nil),
	}
	file_shared_dynamic_setting_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SetValues_BoolValue)(nil),
		(*SetValues_StringValue)(nil),
		(*SetValues_IntegerValue)(nil),
		(*SetValues_FloatValue)(nil),
	}
	file_shared_dynamic_setting_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListValues_BoolValue)(nil),
		(*ListValues_StringValue)(nil),
		(*ListValues_IntegerValue)(nil),
		(*ListValues_FloatValue)(nil),
	}
	file_shared_dynamic_setting_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*PrimitiveValue_BoolValue)(nil),
		(*PrimitiveValue_StringValue)(nil),
		(*PrimitiveValue_IntegerValue)(nil),
		(*PrimitiveValue_FloatValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_dynamic_setting_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_dynamic_setting_proto_goTypes,
		DependencyIndexes: file_shared_dynamic_setting_proto_depIdxs,
		EnumInfos:         file_shared_dynamic_setting_proto_enumTypes,
		MessageInfos:      file_shared_dynamic_setting_proto_msgTypes,
	}.Build()
	File_shared_dynamic_setting_proto = out.File
	file_shared_dynamic_setting_proto_rawDesc = nil
	file_shared_dynamic_setting_proto_goTypes = nil
	file_shared_dynamic_setting_proto_depIdxs = nil
}
